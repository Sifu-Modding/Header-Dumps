#ifndef UE4SS_SDK_WBP_SpinBox_HPP
#define UE4SS_SDK_WBP_SpinBox_HPP

class UWBP_SpinBox_C : public UWBP_ReplayMenuItem_C
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* OnFocus;
    class UImage* BrushOver;
    class UButton* Button_Left;
    class UButton* Button_Right;
    class UTextBlock* ChoiceTitle;
    class URichTextBlock* Content_Text;
    class UImage* ContentImage;
    class UTextBlock* ContentText;
    class UImage* Cursor_0;
    class UImage* Cursor_1;
    class UImage* Cursor_2;
    class UImage* Cursor_3;
    class UImage* Cursor_4;
    class UImage* Cursor_5;
    class UImage* Cursor_6;
    class UImage* Cursor_7;
    class UImage* Cursor_8;
    class UImage* Cursor_9;
    class UImage* Cursor_10;
    class UImage* Grad_1;
    class UImage* Grad_2;
    class UImage* Grad_3;
    class UImage* Grad_4;
    class UImage* Grad_5;
    class UImage* Grad_6;
    class UImage* Grad_7;
    class UImage* Grad_8;
    class UImage* Grad_9;
    class UImage* Grad_10;
    class UImage* Left_Arrow;
    class UImage* Line;
    class UWidgetSwitcher* OptionSwitcher;
    class UImage* RightArrow;
    class USizeBox* SizeBox_Choice;
    class UHorizontalBox* Slider;
    class URichTextBlock* Txt_InboxDescription;
    FWBP_SpinBox_COnReceivedFocus OnReceivedFocus;
    void OnReceivedFocus();
    FWBP_SpinBox_COnLostFocus OnLostFocus;
    void OnLostFocus();
    FWBP_SpinBox_COnClicked OnClicked;
    void OnClicked();
    FText MultiChoiceTitle;
    FText InboxDescription;
    bool bCanLoop;
    bool bIncludeUpperLimit;
    float HorizontalSizeChoice;
    int32 SliderIndex;
    int32 SliderDefaultMaxIndex;
    bool IsBlack;
    bool IsTextCenter;
    bool bUseSlider;
    bool bHasChoice;
    bool ActiveOnKeyOnly;
    bool IsInFocus;
    float PreviousAlphaValue;

    void SetInfoboxDescription(const FText& InText, bool OnFocus);
    void RefreshDisplay(bool bFocus);
    void GetSliderAlphaFomContainer(int32 Index, int32 Size, float& Alpha);
    void GetSliderAlpha(float& Alpha);
    void ComputeSliderIndex();
    void SetSliderContent(bool bFocus);
    void SetTextContent(bool bFocus);
    void GetTextContent(FText& Content);
    void SetContent(bool bFocus);
    void OnSetNextValue(ECycleDirection Direction);
    void HasRightValue(bool& hasValue);
    void HasLeftValue(bool& hasValue);
    void SetFocusBrush(bool On Focus);
    void SetChoiceTitle(FText Text, bool On Focus);
    FEventReply OnFocusReceived(FGeometry MyGeometry, FFocusEvent InFocusEvent);
    FEventReply OnPreviewKeyDown(FGeometry MyGeometry, FKeyEvent InKeyEvent);
    void SetNextValue(ECycleDirection Direction);
    void OnFocusLost(FFocusEvent InFocusEvent);
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_6_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_8_OnButtonReleasedEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_9_OnButtonReleasedEvent__DelegateSignature();
    void Construct();
    void BPE_OnSynchronizeProperties();
    void InitializeWidget();
    void OnPropertyBinded();
    void OnMouseEnter(FGeometry MyGeometry, const FPointerEvent& MouseEvent);
    void OnPropertyUpdatedEvent();
    void ExecuteUbergraph_WBP_SpinBox(int32 EntryPoint);
    void OnClicked__DelegateSignature();
    void OnLostFocus__DelegateSignature();
    void OnReceivedFocus__DelegateSignature();
};

#endif
