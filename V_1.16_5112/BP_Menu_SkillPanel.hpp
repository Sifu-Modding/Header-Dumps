#ifndef UE4SS_SDK_BP_Menu_SkillPanel_HPP
#define UE4SS_SDK_BP_Menu_SkillPanel_HPP

class UBP_Menu_SkillPanel_C : public UMenuWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* FastPermAnim;
    class UWidgetAnimation* PermAnim;
    class UWidgetAnimation* UnlockedAnim;
    class UWidgetAnimation* OnValidated;
    class UTextBlock* AgeOldTxt_1;
    class UTextBlock* AllSkillsLockedText;
    class UImage* BracketRight;
    class UImage* ChargeHorizontal;
    class UHorizontalBox* ChargeLine;
    class UImage* ChargeVertical;
    class UHorizontalBox* CostConsolidateBox;
    class UTextBlock* CostText_XP;
    class UTextBlock* CostValue;
    class UImage* ImgPermFeedback;
    class UImage* ImgUnlockFeedback;
    class UVerticalBox* InfoBox;
    class UBP_Btn_Input_C* InputConsolidate;
    class UBP_Btn_Input_C* InputUnlock;
    class UTextBlock* LearnText;
    class UImage* LineHorizontal;
    class UImage* LineVertical;
    class UTextBlock* MaxAge;
    class UTextBlock* ModifiersONText;
    class UTextBlock* MovesetType;
    class UWidgetSwitcher* PanelSwitcher;
    class UHorizontalBox* PermanentBox;
    class UTextBlock* PermanentText;
    class UBorder* PermBorder;
    class UImage* PermItem01;
    class UImage* PermItem02;
    class UImage* PermItem03;
    class UImage* PermItem04;
    class UImage* PermItem05;
    class UImage* PermLine;
    class UHorizontalBox* ProgressBox;
    class UTextBlock* SkillDescription;
    class URichTextBlock* SkillDetailsDeath;
    class URichTextBlock* SkillDetailsNotDeath;
    class UWidgetSwitcher* SkillDetailsSwitcher;
    class UAsyncImage* SkillIllustration;
    class UTextBlock* SkillName;
    class UUniformGridPanel* SkillsBox;
    class UImage* SkillsLockedDot;
    class URichTextBlock* SkillWeaponsDeath;
    class URichTextBlock* SkillWeaponsNotDeath;
    class UBorder* UnlockBorder;
    class UHorizontalBox* UnlockBox;
    class UBorder* UnlockCostBorder;
    class UImage* UnlockLine;
    class UTextBlock* UnlockText;
    class UImage* VideoMask;
    class UWidgetSwitcher* WidgetSwitcher_Age;
    class UButtonUserWidget* ButtonHolded;
    class UAsyncTaskTick* HoldTask;
    class UBP_Menu_SkillBtn_C* UnlockedSkillBtn;
    TArray<class UBP_Menu_SkillBtn_C*> SkillBtnArray;
    class UBP_Menu_SkillBtn_C* currentButton;
    FBP_Menu_SkillPanel_CHoldStarted HoldStarted;
    void HoldStarted();
    FBP_Menu_SkillPanel_CHoldStopped HoldStopped;
    void HoldStopped();
    FBP_Menu_SkillPanel_CFifthLevelSkillUnlocked FifthLevelSkillUnlocked;
    void FifthLevelSkillUnlocked(TSubclassOf<class UGameplayEffect> SkillUnlocked);
    FBP_Menu_SkillPanel_CSkillUnlocked SkillUnlocked;
    void SkillUnlocked(TSubclassOf<class USkillGameplayEffect> SkillUnlocked);
    FBP_Menu_SkillPanel_CSkillConsolidated SkillConsolidated;
    void SkillConsolidated(TSubclassOf<class USkillGameplayEffect> Skill);
    FBP_Menu_SkillPanel_CSkillClicked SkillClicked;
    void SkillClicked();
    FBP_Menu_SkillPanel_CSkillPermanentUnlocked SkillPermanentUnlocked;
    void SkillPermanentUnlocked();
    class UMediaPlayer* SkillsMediaPlayer;
    class UMediaSource* MediaSourceToPlay;
    class UMediaSource* PendingMediaSourceToPlay;
    float UpdateMediaPlayerDelay;
    bool bIsLoadingMediaSource;
    int32 LastSkillCurrentPermUnlockStep;
    bool UnlockablePrePerm;

    void SequenceEvent__ENTRYPOINTBP_Menu_SkillPanel_2();
    void SequenceEvent__ENTRYPOINTBP_Menu_SkillPanel_1();
    void SequenceEvent__ENTRYPOINTBP_Menu_SkillPanel_0();
    bool IsLockAllSkills();
    void PlayPermanentUnlockSound();
    void GetSkillStatus(class UBP_Menu_SkillBtn_C* SkillBtn, int32& Cost, bool& PermUnlock, bool& FirstUnlock);
    void GetConsolidable(class UBP_Menu_SkillBtn_C* Button, TSubclassOf<class USkillGameplayEffect> Effect, bool& Consolidable);
    void PlayBaseUnlockSound();
    void CheckAllSkillsPermanentlyUnlocked();
    void SkillPermUnlock();
    void SetSkillDetails(TSubclassOf<class USkillGameplayEffect> LocalSkill);
    void CallSkillClicked();
    void Unlock Skill();
    void OnSkillConsolidate(class UBP_Menu_SkillBtn_C* Button);
    void AchievementLevel5_Skill();
    void UpdatePanelSwitcher(bool LocalDeath);
    void GetFirstUnlockableButton(class UBP_Menu_SkillBtn_C*& Button);
    void GetRowVisibility(TArray<class UWidget*>& Array, bool& RowVisible);
    void UpdateRowsVisibility(bool LocalSpend);
    void GetContexts(bool& SpendContext, bool& DeathContext);
    class UWidget* WrapNextButton(EUINavigation Navigation);
    void GetSkillProgress(TSubclassOf<class USkillGameplayEffect> LocalSkill, int32& Current, int32& Max, int32& ConsolidationValue);
    void ValidatePanel();
    void OnSkillBtnUnlocked(class UBP_Menu_SkillBtn_C* Button, TArray<class TSubclassOf<USkillGameplayEffect>>& PrevSkills, TArray<class TSubclassOf<USkillGameplayEffect>>& NewSkills);
    void OnSkillBtnLost(class UBP_Menu_SkillBtn_C* Button);
    void OnSkillBtnFocused(class UBP_Menu_SkillBtn_C* Button);
    void UpdateSkillButtons(bool LocalSpend, bool LocalDeath);
    void SetPanelStyle(bool LocalSpend, bool LocalDeath);
    void UpdatePanelDisplay(class UBP_Menu_SkillBtn_C* SkillBtn);
    void Construct();
    void BPE_OnMenuTransitionIn(EMenuTransitions _eTransition, EMenuEnum _ePrevMenu);
    void BPE_OnMenuTransitionOut(EMenuTransitions _eTransition, EMenuEnum _eNewMenu);
    void OnUpdateMediaPlayer();
    void Destruct();
    void OnUpdateMediaPlayerDelayed();
    void PlayUnlockAnim(bool PermUnlock, int32 CurrentPermUnlockStep);
    void OnUnlockAnimFinished();
    void ExecuteUbergraph_BP_Menu_SkillPanel(int32 EntryPoint);
    void SkillPermanentUnlocked__DelegateSignature();
    void SkillClicked__DelegateSignature();
    void SkillConsolidated__DelegateSignature(TSubclassOf<class USkillGameplayEffect> Skill);
    void SkillUnlocked__DelegateSignature(TSubclassOf<class USkillGameplayEffect> SkillUnlocked);
    void FifthLevelSkillUnlocked__DelegateSignature(TSubclassOf<class UGameplayEffect> SkillUnlocked);
    void HoldStopped__DelegateSignature();
    void HoldStarted__DelegateSignature();
};

#endif
