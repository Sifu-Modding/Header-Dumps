#ifndef UE4SS_SDK_BP_Menu_Death_HPP
#define UE4SS_SDK_BP_Menu_Death_HPP

class UBP_Menu_Death_C : public UDeathMenu
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* NoCounterRise;
    class UWidgetAnimation* NoCounterIntro;
    class UWidgetAnimation* SkillUnlocked;
    class UWidgetAnimation* ContinueAnim;
    class UWidgetAnimation* FirstDeathAnim;
    class UWidgetAnimation* DeathMask;
    class UWidgetAnimation* GameoverIntro;
    class UWidgetAnimation* CounterRise;
    class UWidgetAnimation* CounterIntro;
    class UVerticalBox* AgingImpactBox;
    class UImage* Bkg_Death;
    class UImage* Bkg_GameOver;
    class UImage* Bkg_Rise;
    class UImage* BlackMask;
    class UBP_HUD_Age_C* BP_AgeCentered;
    class UBP_Notif_AgeDeathCounter_C* BP_AgeCorner;
    class UBP_Btn_Hold_C* BP_Btn_Hold;
    class UBP_Btn_Title_C* BP_DeathSub;
    class UBP_Notif_Spend_C* BP_Notif_Spend;
    class UBP_Notif_XP_C* BP_Notif_XP;
    class UBP_Popup_Multichoice_C* BP_Popup_Multichoice;
    class UBP_Menu_Popup_Validation_C* BP_PopupGiveup;
    class UBP_Menu_Popup_Validation_C* BP_PopupUnlock;
    class UBP_Btn_InputTip_C* ContinueInput;
    class UCanvasPanel* Death;
    class UCanvasPanel* DeathCanvas;
    class UHorizontalBox* DeathCounterBox;
    class UWidgetSwitcher* DeathSwitcher;
    class UVerticalBox* FirstDeathBox;
    class UTextBlock* FlowCounterTxt;
    class UCanvasPanel* GameOver;
    class UImage* ImgStroke;
    class UImage* LineHorizontal_2;
    class UTextBlock* NewCounterTxt;
    class UTextBlock* OldCounterTxt;
    class UBackgroundBlur* PopupBackground;
    class UBP_Btn_InputTip_C* RestartTip;
    class UBP_Btn_InputTip_C* RiseTip;
    class UBP_Menu_SkillPanel_C* SkillPanel_Death;
    class UImage* UI_3D_Image;
    bool bIsGameOver;
    bool bResurrected;
    bool bHolding;
    bool bInterrupted;
    class ABP_UI_3D_C* UI_3D_BP;
    TSoftObjectPtr<ABP_UI_3D_C> UI_3D_BP_Soft;
    int32 UI_3D_Pendant_ChargeID;
    float UI_3D_Pendant_HoldValue;
    int32 PreviousChargeLimit;
    bool bHasSoundStarted;
    bool bCoinExplode;
    bool bFromHideoutSelect;
    int32 CurrentCoins;
    int32 UI_3D_MID_Index;
    class UMaterialInstanceDynamic* UI_3D_MID;
    class UMaterialInterface* UI_3D_Material;
    float PauseTime;
    class UWidgetAnimation* PausedAnim;
    bool bIsFirstDeath;
    class UAkAudioEvent* AkEvent;
    FLinearColor BackgroundColor;
    int32 iHideoutIdx;

    void SequenceEvent__ENTRYPOINTBP_Menu_Death_14();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_13();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_12();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_11();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_10();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_9();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_8();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_7();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_6();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_5();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_4();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_3();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_2();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_1();
    void SequenceEvent__ENTRYPOINTBP_Menu_Death_0();
    void UpdateCurrencyPopup();
    void MultichoiceDisplay(bool Condition);
    bool BPE_OnBackButtonPressed();
    void OnSkillPermanentUnlock();
    void PauseAnimOnFirstDeath(class UWidgetAnimation* LocalAnim, class UAkAudioEvent* AkEventToPlay);
    void GetAgeBonus(bool Previous, int32& HealthBonus, int32& DamageBonus);
    void OnSkillUnlocked(TSubclassOf<class USkillGameplayEffect> SkillUnlocked);
    void OnSkillClicked();
    void OnHold_BuildUp(float HoldValue);
    void TriggerChargeTurnOff(int32 ExplodingChargeID);
    void RiseFlash();
    void TriggerChargeExplode(int32 ExplodingChargeID);
    void ResolveChargesExplode(int32 PreviousChargeLimit, int32 CurrentChargeLimit);
    void SetHoldValue(float NewHoldValue);
    void EnsureUI3DBP(bool& bIsValid);
    void HoldSkillStopped();
    void HoldSkillStarted();
    void CallStandBackUp();
    void ResetUI();
    void UpdateStats();
    void UpdateSkillPanelVisibility();
    bool BPE_OnMenuButtonPressed();
    bool BPE_OnMenuActionSecondaryHoldButtonPressed();
    void PopupDisplay(class UWidget* Popup, bool DisplayPopup);
    void GetChargesColor(FSlateColor& ChargeColor);
    bool IsRiseAvaible();
    void UpdateCharges(int32& Charges);
    void UpdateGameOver(int32 Charges, bool& GameOver);
    class UStatsComponent* GetStatsComponent();
    void FirstDeathIntroStop();
    void FirstDeathRiseStop();
    void SwitchAge();
    void DeathSoundAmbiance();
    void DeathSoundRise();
    void LaunchRiseEvent();
    void On Character Stats Changed();
    void BPE_OnMenuTransitionIn(EMenuTransitions _eTransition, EMenuEnum _ePrevMenu);
    void EventCloseMenu();
    void EventEnableInputs();
    void BPE_OnMenuTransitionOut(EMenuTransitions _eTransition, EMenuEnum _eNewMenu);
    void OnCharacterStatChanged(ECharacterStat _type, int32 _previousValue, int32 _currentValue);
    void UnbindEvents();
    void Tick(FGeometry MyGeometry, float InDeltaTime);
    void LaunchTimer_BreakCoinsSFX();
    void BndEvt__BP_Menu_Death_BP_PopupUnlock_K2Node_ComponentBoundEvent_0_YesClicked__DelegateSignature();
    void BndEvt__BP_Menu_Death_BP_PopupUnlock_K2Node_ComponentBoundEvent_1_NoClicked__DelegateSignature();
    void OnAnimationFinished(const class UWidgetAnimation* Animation);
    void OnGiveUpClick(int32 Choice);
    void OnGiveUpBack();
    void ExecuteUbergraph_BP_Menu_Death(int32 EntryPoint);
};

#endif
