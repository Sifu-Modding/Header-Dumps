#ifndef UE4SS_SDK_BP_DefenseAnimRequestGruntBat_HPP
#define UE4SS_SDK_BP_DefenseAnimRequestGruntBat_HPP

class UBP_DefenseAnimRequestGruntBat_C : public UDefenseAnimRequest
{
    class UAnimSequence* ParrySB_parrier_ArmOutward;                                  // 0x0028 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_ArmOutward_Mirror;                           // 0x0030 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_ArmInward;                                   // 0x0038 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_ArmInward_Mirror;                            // 0x0040 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_LegInward;                                   // 0x0048 (size: 0x8)
    class UAnimSequence* ParrySB_parried_ArmInward;                                   // 0x0050 (size: 0x8)
    class UAnimSequence* ParrySB_parried_ArmInward_Mirror;                            // 0x0058 (size: 0x8)
    class UAnimSequence* ParrySB_parried_ArmOutward;                                  // 0x0060 (size: 0x8)
    class UAnimSequence* ParrySB_parried_ArmOutward_Mirror;                           // 0x0068 (size: 0x8)
    class UAnimSequence* ParrySB_parried_LegInward;                                   // 0x0070 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_LegInward_Mirror;                            // 0x0078 (size: 0x8)
    class UAnimSequence* ParryDizzy_parrier_ArmOutward;                               // 0x0080 (size: 0x8)
    class UAnimSequence* ParryDizzy_parrier_ArmInward;                                // 0x0088 (size: 0x8)
    class UAnimSequence* ParryDizzy_parrier_LegInward;                                // 0x0090 (size: 0x8)
    class UAnimSequence* ParrySB_parried_LegInward_Mirror;                            // 0x0098 (size: 0x8)
    class UAnimSequence* ParryDizzy_parried_ArmInward;                                // 0x00A0 (size: 0x8)
    class UAnimSequence* ParryDizzy_parried_ArmOutward;                               // 0x00A8 (size: 0x8)
    class UAnimSequence* ParryDizzy_parried_LegInward;                                // 0x00B0 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_ArmInward;                               // 0x00B8 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_ArmInward;                               // 0x00C0 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_ArmInward_Mirror;                        // 0x00C8 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_ArmOutward;                              // 0x00D0 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_ArmInward_Mirror;                        // 0x00D8 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_ArmOutward;                              // 0x00E0 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_ArmOutward_Mirror;                       // 0x00E8 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_LegInward;                               // 0x00F0 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_ArmOutward_Mirror;                       // 0x00F8 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_LegInward;                               // 0x0100 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_LegInward_Mirror;                        // 0x0108 (size: 0x8)
    class UAnimSequence* ParryDefault_parrier;                                        // 0x0110 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_armOutward_Back;                             // 0x0118 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_LegInward_Mirror;                        // 0x0120 (size: 0x8)
    class UAnimSequence* ParryDefault_parried;                                        // 0x0128 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_armOutward_Back_Mirror;                      // 0x0130 (size: 0x8)
    class UAnimSequence* ParryDizzy_parrier_Back;                                     // 0x0138 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_armOutward_Back;                         // 0x0140 (size: 0x8)
    class UAnimSequence* ParrySB_parried_armOutward_Back;                             // 0x0148 (size: 0x8)
    class UAnimSequence* ParrySB_parried_armOutward_Back_Mirror;                      // 0x0150 (size: 0x8)
    class UAnimSequence* ParryDizzy_parried_Back;                                     // 0x0158 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_armOutward_Back;                         // 0x0160 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_armOutward_Back_Mirror;                  // 0x0168 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_armOutward_Back_Mirror;                  // 0x0170 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_armInward_Back;                              // 0x0178 (size: 0x8)
    class UAnimSequence* ParrySB_parrier_armInward_Back_Mirror;                       // 0x0180 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_armInward_Back;                          // 0x0188 (size: 0x8)
    class UAnimSequence* ParryPunish_parrier_armInward_Back_Mirror;                   // 0x0190 (size: 0x8)
    class UAnimSequence* ParrySB_parried_armInward_Back;                              // 0x0198 (size: 0x8)
    class UAnimSequence* ParrySB_parried_armInward_Back_Mirror;                       // 0x01A0 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_armInward_Back;                          // 0x01A8 (size: 0x8)
    class UAnimSequence* ParryPunish_parried_armInward_Back_Mirror;                   // 0x01B0 (size: 0x8)
    bool disable SB Reorient on back;                                                 // 0x01B8 (size: 0x1)
    bool disable Dizzy Reorient on back;                                              // 0x01B9 (size: 0x1)
    bool disable Parry Punish Reorient on back;                                       // 0x01BA (size: 0x1)

    void HandleMirror(class UAnimSequence* Anim, class UAnimSequence* AnimMirror, bool Mirror, class UAnimSequence*& ResultAnim, bool& resultMirror);
    void BPE_GetHitDefenseAnimation(const FHitDescription& _hitDescription, class AFightingCharacter* _grabber, FDefenderAnimInfos& _outDefenderAnims, FDefenseAnimInfos& _outDefendeeAnims);
}; // Size: 0x1BB

#endif
