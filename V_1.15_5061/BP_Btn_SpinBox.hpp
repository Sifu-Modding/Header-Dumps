#ifndef UE4SS_SDK_BP_Btn_SpinBox_HPP
#define UE4SS_SDK_BP_Btn_SpinBox_HPP

class UBP_Btn_SpinBox_C : public USCUserWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* OnFocus;
    class UBP_Btn_InfoBubble_C* BP_Menu_InfoBubble;
    class UImage* BrushOver;
    class UButton* Button_Checkbox;
    class UButton* Button_Left;
    class UButton* Button_Right;
    class URichTextBlock* ChoiceTitle;
    class URichTextBlock* Content_Text;
    class URichTextBlock* Content_Text_Checkbox;
    class UImage* Cursor_0;
    class UImage* Cursor_1;
    class UImage* Cursor_2;
    class UImage* Cursor_3;
    class UImage* Cursor_4;
    class UImage* Cursor_5;
    class UImage* Cursor_6;
    class UImage* Cursor_7;
    class UImage* Cursor_8;
    class UImage* Cursor_9;
    class UImage* Cursor_10;
    class UImage* Grad_1;
    class UImage* Grad_2;
    class UImage* Grad_3;
    class UImage* Grad_4;
    class UImage* Grad_5;
    class UImage* Grad_6;
    class UImage* Grad_7;
    class UImage* Grad_8;
    class UImage* Grad_9;
    class UImage* Grad_10;
    class UImage* IMG_CheckboxIcon;
    class UImage* Left_Arrow;
    class UImage* LineImg;
    class UImage* NotifActivated_Img;
    class UWidgetSwitcher* OptionSwitcher;
    class UOverlay* OverlayNotifActivated;
    class UImage* RightArrow;
    class USizeBox* SizeBox_Choice;
    class UHorizontalBox* Slider;
    class UWidgetSwitcher* Switcher_SelectionType;
    class URichTextBlock* Txt_InboxDescription;
    class UVerticalBox* VerticalBox_0;
    TArray<FText> Texts;
    int32 SelectedIndex;
    FBP_Btn_SpinBox_COnValueChanged OnValueChanged;
    void OnValueChanged(int32 Value, ECycleDirection Direction, float RatioFloat);
    FBP_Btn_SpinBox_COnReceivedFocus OnReceivedFocus;
    void OnReceivedFocus();
    FBP_Btn_SpinBox_COnLostFocus OnLostFocus;
    void OnLostFocus();
    class UTexture2D* SelectionBackgroundTexture;
    FBP_Btn_SpinBox_COnClicked OnClicked;
    void OnClicked();
    bool CycleOnClick;
    FText MultiChoiceTitle;
    FText InboxDescription;
    bool bIsInt;
    int32 IntRangeMin;
    int32 IntRangeMax;
    bool bCanLoop;
    bool BIncludeLimits;
    float HorizontalSizeChoice;
    int32 SliderIndex;
    uint8 Scalability;
    bool bIsScalability;
    FBP_Btn_SpinBox_CScalabilityChanged ScalabilityChanged;
    void ScalabilityChanged(int32 SelectedIndex, uint8 Scalability);
    bool isOnOffSwitch;
    FText InfoText;
    TArray<class UBorder*> CursorArray;
    TArray<class UBorder*> GradArray;
    bool IsBlack;
    FLinearColor ButtonColor;
    EGameOptionTypes OptionType;
    bool SkipOptionType;
    class UMediaPlayer* MediaPlayer;
    TArray<class UFileMediaSource*> VideoIllustrations;
    class UMaterial* MediaMat;
    TArray<class UTexture2D*> ImageIllustrations;
    bool IsInFocus;
    bool WaitingForKeyUp;

    FEventReply OnKeyUp(FGeometry MyGeometry, FKeyEvent InKeyEvent);
    void SetInboxDescription(FText Text, bool On Focus);
    void ActivateActiveNotificationBehaviour(bool Activate);
    FEventReply OnKeyDown(FGeometry MyGeometry, FKeyEvent InKeyEvent);
    void SetIsBlack(bool IsBlack);
    void EnableInteractions(bool Enable);
    void SetContentText(const FText& InText, bool OnFocus);
    void ShowInfo();
    int32 SetSelectedIndex(int32 Index, float LocalFloat);
    void FillArray(const TArray<class UBorder*>& Array, FLinearColor Color, FVector2D Size, FVector2D Margin);
    void SetFocusBrush(bool On Focus);
    void SetChoiceTitle(FText Text, bool On Focus);
    FEventReply OnFocusReceived(FGeometry MyGeometry, FFocusEvent InFocusEvent);
    FEventReply OnPreviewKeyDown(FGeometry MyGeometry, FKeyEvent InKeyEvent);
    void SetNextValue(ECycleDirection Direction);
    void SetSelectedContent(int32 Index, float IndexFloat, bool OnFocus);
    void Construct();
    void OnFocusLost(FFocusEvent InFocusEvent);
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
    void BPE_OnSynchronizeProperties();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_4_OnButtonPressedEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_6_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Left_K2Node_ComponentBoundEvent_8_OnButtonReleasedEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_5_OnButtonPressedEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_7_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__Button_Right_K2Node_ComponentBoundEvent_9_OnButtonReleasedEvent__DelegateSignature();
    void BPE_OnClicked_1();
    void BPE_OnCultureChanged();
    void BndEvt__BP_Btn_SpinBox_Button_Checkbox_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature();
    void BndEvt__BP_Btn_SpinBox_Button_Checkbox_K2Node_ComponentBoundEvent_19_OnButtonPressedEvent__DelegateSignature();
    void BndEvt__BP_Btn_SpinBox_Button_Checkbox_K2Node_ComponentBoundEvent_20_OnButtonReleasedEvent__DelegateSignature();
    void BndEvt__BP_Btn_SpinBox_Button_Checkbox_K2Node_ComponentBoundEvent_21_OnButtonHoverEvent__DelegateSignature();
    void BndEvt__BP_Btn_SpinBox_Button_Checkbox_K2Node_ComponentBoundEvent_22_OnButtonHoverEvent__DelegateSignature();
    void PreConstruct(bool IsDesignTime);
    void ExecuteUbergraph_BP_Btn_SpinBox(int32 EntryPoint);
    void ScalabilityChanged__DelegateSignature(int32 SelectedIndex, uint8 Scalability);
    void OnClicked__DelegateSignature();
    void OnLostFocus__DelegateSignature();
    void OnReceivedFocus__DelegateSignature();
    void OnValueChanged__DelegateSignature(int32 Value, ECycleDirection Direction, float RatioFloat);
};

#endif
